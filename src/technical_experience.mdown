# Technical Experience

---

## Programming Languages

> I believe that the more types of programming languages you know, the more tools you
> have in your toolbox. Some languages (Haskell, Clojure, Javascript, Scheme) have had a
> profound impact on how I write code in any language.

### Specific experience:

* Java _(6 years professional experience, 10+ years total)_
* Javascript _(4 years professional experience)_
* Ruby _(10+ years experience)_
    * Primarily used in small server scripts
    * Haven't used it much lately, but picking it back up should be trivial
* Clojure _(2 years experience)_
    * Mostly on small, personal projects
* bash/zsh scripting _(7+ years experience)_
* Scheme, Haskell, C#, Objective-C, Scala
    * Light, but workable knowledge of all of these

---

## Build/Deploy

> On all software development projects I've been involved with, I've been the "build guy".
> I love working to improve the process of building and deploying software to keep the 
> build time down, to receive the fastest feedback possible of the status of the build, 
> and ensuring everybody on the team can use the build script effectively and easily.

> Most recently I've gotten interested in the DevOps movement. I like the bridging of
> my developer background with my (light) operations background. I've also worked closely 
> with Jez Humble (co-author of the [Continuous Delivery][cdbook] book) for the better part
> of 4 years.

### Specific experience:

* [Ant][ant] _(6 years professional experience)_
* [Rake][rake] _(2 years professional experience)_
* [Buildr][buildr] _(1 year professional experience)_
* [Chef][chef] _(2 years light experience)_
    * Mostly played around with this in my free time

[cdbook]: http://continuousdelivery.com/
[ant]: http://ant.apache.org/
[rake]: http://rake.rubyforge.org/
[buildr]: http://buildr.apache.org/
[chef]: http://www.opscode.com/chef/

---

## Testing

> Automated testing is an important part of any software project. By working closely
> with the QAs on the various teams I've been a part of, I have a strong understanding
> of the best ways to structure and organize automated functional test scripts, as well
> as the code underneath.

### Specific experience:

* [Fit][]/[Twist][] _(5 years professional experience)_
    * ThoughtWorks [Twist][] product is largely inspired from [Fit][]
* [Selenium][sel]/[WebDriver][wd]/[Sahi][sahi] _(5 years professional experience)_
    * [WebDriver][wd] has been integrated into the latest version of [Selenium][sel]
* [JUnit][junit] _(6 years professional experience)_

[fit]: http://fit.c2.com/
[twist]: http://www.thoughtworks-studios.com/twist
[sel]: http://seleniumhq.org/
[wd]: http://webdriver.googlecode.com/
[sahi]: http://sahi.co.in/w/
[junit]: http://www.junit.org/

---

## Version Control

> I've been using version control systems for more than 7 years. I started using
> [Subversion][svn], but lately have been using DVCS almost exclusively. Professionally
> we've been using mostly [Mercurial][hg], while for my personal projects I've been
> using primarily [Git][].

### Specific experience:

* [Git][] _(4 years experience)_
* [Mercurial][hg] _(4 years professional experience)_
* [Subversion][svn] _(4 years professional experience)_
    * Haven't used in several years

[git]: http://git-scm.com/
[hg]: http://mercurial.selenic.com/
[svn]: http://subversion.tigris.org/
